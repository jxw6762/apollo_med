Questions:
Q:For 2.a, it says "...top k valid package NDC’s found from the input file, where k is a parameter for the program...". I'm not sure what "parameters" means in this case looking at the data file. Can you give an example? Also, for the 'top' part, is there some threshold (like just list the top 3)? Do I need to sort by count for all available results? Can I get some clarification on what "top" means?
A:$k$ is a parameter for the user of the program to enter. Can take any form Justin wants – command line arg, or assume it’s passed in as an arg to a function from some frontend, whatever. For the “top $k$” direction, it would be the top (whatever k is) – so if $k$ is 3, then top 3, if user enters $k=5$ then top 5. “Top” as in, most frequently appearing. For example, if I had a set {A, A, A, B, B, C, D, D, D, D}, and the user inputted $k=3$, I might output something like: {D: 4, A: 3, B: 2}, since those are the top 3 appearing letters, with their counts.

Q:For 2.b, are nulls considered 'invalid'? Or should they be expunged completely? Also, the description of 10-to-11 formatting conversion in part 1 says there are 3 different formats. For example, a 10 digit number of 1234567890 can be formatted as 01234-5678-90, 12345-0678-90, and 12345-6789-00. Are these all considered to be the same 'package'? Or do each of these variations suggest they are the same package? In data terms, basically do I have to unhash this id before aggregating?
A:Great questions. The dataset I created for this was intentionally messy in a couple ways. In real life this might be up to the stakeholder, or the data engineer may have to make some assumption and inform the stakeholder of said assumption(s). In this case, they can be expunged. For this case, the hyphen locations matter in the 10-digit “original”. For example, 01234-567-89 would normalize to 01234-0567-89, and that would be different from 0123-4567-89 normalizing to 00123-4567-89.